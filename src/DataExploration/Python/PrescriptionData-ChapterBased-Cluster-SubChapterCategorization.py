
# coding: utf-8

# # This notebook analyses the files generated by subchapter by each cluster
# ## Specific interest is on medicines/drugs categories listed below :
# ## * 0601021* Oral hypoglycaemics
# ## * 0601022* Metformin
# ## * 0601023* Gliptins
# ## * 0601011* Insulin
# ## * 0601012*Insulin
# ## * 0704050* Viagra and others
# 
# ## The files generated from PrescriptionData-ChapterBased-Cluster-Correlation jupyter notebook are used for further analysis.

# In[34]:


import pandas as pd
from IPython.display import Image
import matplotlib.pyplot as plt
import seaborn as sns
from IPython.display import Markdown, display # to print markdown text


# In[31]:


# Print bold text
def print_markdown(string): display(Markdown(string))


# In[4]:


SubChapterCategories = ['0601021', '0601022', '0601023', '0601011', '0601012', '0704050']


# ## Based on the cluster analysis, the 3D visualization of the clusters based on Average Age Profile of a GP, % of Diabetic Patients and Index of Multiple Deprivation

# In[3]:


Image("insights/3DClusterDiabetics_PlotLy.png")


# In[37]:


# Generated files
Cluster0 = ['DARK_BLUE', 'PracticeBySubChapterByCluster_0.csv']
Cluster1 = ['BLUE', 'PracticeBySubChapterByCluster_1.csv']
Cluster2 = ['ORANGE', 'PracticeBySubChapterByCluster_2.csv']
Cluster3 = ['RED', 'PracticeBySubChapterByCluster_3.csv']


# In[44]:


Cluster_CsvData = [Cluster0, Cluster1, Cluster2, Cluster3]


# In[38]:


# Drug groups
Oral_Hypog = ['Oral hypoglycaemics', 601021]
Metformin = ['Metformin', 601022]
Gliptins = ['Gliptins', 601023]
Insulin1 = ['Insulin1', 601011]
Insulin2 = ['Insulin', 601012]
Viagra_others = ['Viagra and others', 704050]


# In[39]:


DrugGroups = [Oral_Hypog, Metformin, Gliptins, Insulin1, Insulin2, Viagra_others]


# In[52]:


# Generate scatter plots for each cluster based on each drug group
ClusterIndex = 0
for cluster in Cluster_CsvData:
    Cluster_Data = pd.read_csv(cluster[1], sep=',', encoding = "ISO-8859-1")
    Cluster_Data['AVERAGE_NIC'] = Cluster_Data['NIC        ']/Cluster_Data['ITEMS  '] 
    for DrugGroup in DrugGroups:
        print_markdown('## Cluster ' + str(ClusterIndex) + ' ' + cluster[0] + ' ' + DrugGroup[0])
        Filter = Cluster_Data['SUB_CHAPTER'] == DrugGroup[1]
        Cluster_Filter = Data = Cluster_Data[Filter]

        sns.set(color_codes=True)
        sns.distplot(Cluster_Filter['NIC        ']);
        plt.show()

        x = Cluster_Filter['ITEMS  ']
        y = Cluster_Filter['NIC        ']

        plt.scatter(x, y)
        plt.xlabel("Number of Items")
        plt.ylabel("Total NIC")
        plt.show()
        print(Cluster_Filter['AVERAGE_NIC'].describe())
    ClusterIndex += 1


# In[55]:


# Generate scatter plots for each cluster based on each drug group
ClusterIndex = 0
for cluster in Cluster_CsvData:
    Cluster_Data = pd.read_csv(cluster[1], sep=',', encoding = "ISO-8859-1")
    Cluster_Data['AVERAGE_NIC'] = Cluster_Data['NIC        ']/Cluster_Data['ITEMS  '] 
    for DrugGroup in DrugGroups:
        print_markdown('## Cluster ' + str(ClusterIndex) + ' ' + cluster[0] + ' ' + DrugGroup[0])
        Filter = Cluster_Data['SUB_CHAPTER'] == DrugGroup[1]
        Cluster_Filter = Data = Cluster_Data[Filter]

        sns.set(color_codes=True)
        sns.distplot(Cluster_Filter['NIC        ']);
        plt.show()

        x = Cluster_Filter['NIC        ']
        y = Cluster_Filter['ITEMS  ']

        plt.scatter(x, y)
        plt.xlabel("Total NIC")
        plt.ylabel("Number of Items")
        plt.show()
        print(Cluster_Filter['AVERAGE_NIC'].describe())
    ClusterIndex += 1


# In[54]:


# Generate scatter plots for each cluster based on each drug group : Average NIC vs ITEMS
ClusterIndex = 0
for cluster in Cluster_CsvData:
    Cluster_Data = pd.read_csv(cluster[1], sep=',', encoding = "ISO-8859-1")
    Cluster_Data['AVERAGE_NIC'] = Cluster_Data['NIC        ']/Cluster_Data['ITEMS  '] 
    for DrugGroup in DrugGroups:
        print_markdown('## Cluster ' + str(ClusterIndex) + ' ' + cluster[0] + ' ' + DrugGroup[0])
        Filter = Cluster_Data['SUB_CHAPTER'] == DrugGroup[1]
        Cluster_Filter = Cluster_Data[Filter]

        sns.set(color_codes=True)
        sns.distplot(Cluster_Filter['AVERAGE_NIC']);
        plt.show()

        x = Cluster_Filter['AVERAGE_NIC']
        y = Cluster_Filter['ITEMS  ']

        plt.scatter(x, y)
        plt.xlabel("Average NIC")
        plt.ylabel("Number of Items")
        plt.show()
        print(Cluster_Filter['AVERAGE_NIC'].describe())
    ClusterIndex += 1

